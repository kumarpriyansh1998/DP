class Solution {
    public String longestPalindrome(String s) {
        
        
        
        
        int n = s.length();
        boolean dp[][] = new boolean[n][n];
        for(int i=0;i<2;i++){
            int a=0;
            int b=i;
            while(b<n){
                if(s.charAt(a)==s.charAt(b)) dp[a][b] = true;
                a++;
                b++;
            }
        }
        
        
        for(int i=2;i<n;i++){
            int a=0;
            int b=i;
            while(b<n){
                if(s.charAt(a)==s.charAt(b)){
                    dp[a][b] = dp[a+1][b-1];
                }
                a++;
                b++;
            }
        }
        

        int maxi=0;
        int maxj=0;
        for(int i=n-1;i>=0;i--){
            int a=0;
            int b=i;
            while(b<n){
                if(dp[a][b]==true){
                    maxi=a;
                    maxj=b;
                return s.substring(maxi,maxj+1);
                    
                }
                else{
                    a++;
                    b++;
                }
            }
        }
        
        return s.substring(0,1);
      
        
     
        
        
        
        
        
        
        
        
        
        
        
    }
}
